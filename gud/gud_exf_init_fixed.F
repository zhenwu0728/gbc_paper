C This file contains cog templates.
C Code between template and end marker is autogenerated.
C Add new forcing fields to exfflds in exf.py
C
CCOG[[[cog import cog; from exf import *]]]
CCOG[[[end]]] (checksum: d41d8cd98f00b204e9800998ecf8427e)

#include "GUD_OPTIONS.h"
#include "EXF_OPTIONS.h"

C---+----1----+----2----+----3----+----4----+----5----+----6----+----7-|--+----|
CBOP
C     !ROUTINE: GUD_EXF_INIT_FIXED

C     !INTERFACE:
      SUBROUTINE GUD_EXF_INIT_FIXED( myThid )

C     !DESCRIPTION:
C     Initialize GUD constants for exf field loading

C     !USES:
      IMPLICIT NONE
#include "SIZE.h"
#include "EEPARAMS.h"
#include "PARAMS.h"
#include "EXF_PARAM.h"
#include "GUD_SIZE.h"
#include "GUD_EXF.h"

C     !INPUT PARAMETERS:
      INTEGER myThid
CEOP

C     !LOCAL VARIABLES:
C     === Local variables ===
C     msgBuf    :: Informational/error message buffer
C     errCount  :: error counter
      CHARACTER*(MAX_LEN_MBUF) msgBuf
      INTEGER errCount

#ifdef ALLOW_GUD
#ifdef ALLOW_EXF

      _BEGIN_MASTER( myThid )
      errCount = 0

#ifdef GUD_ALLOW_RADTRANS
      IF ( OASIM_Edfile(1) .NE. ' ' ) THEN
# ifdef ALLOW_DEBUG
       IF (debugMode) CALL DEBUG_CALL('GETFFIELD_START OASIM',myThid)
# endif
       CALL EXF_GETFFIELD_START( useGudYearlyFields,
     I                           'gud', 'OASIM', OASIMperiod,
     I                           OASIMstartdate1, OASIMstartdate2,
     U                           OASIMStartTime, errCount,
     I                           myThid )
      ENDIF
#endif
CCOG[[[cog
CCOGfor fld,pre in exfflds:
CCOG    cog.out('''
CCOG      IF ( {pre}file .NE. ' ' ) THEN
CCOG# ifdef ALLOW_DEBUG
CCOG       IF (debugMode) CALL DEBUG_CALL('GETFFIELD_START {pre}',myThid)
CCOG# endif
CCOG       CALL EXF_GETFFIELD_START( useGudYearlyFields,
CCOG     I                           'gud', '{pre}', {pre}period,
CCOG     I                           {pre}startdate1, {pre}startdate2,
CCOG     U                           {pre}StartTime, errCount,
CCOG     I                           myThid )
CCOG      ENDIF
CCOG'''.format(pre=pre, fld=fld))
CCOG]]]

      IF ( PARfile .NE. ' ' ) THEN
# ifdef ALLOW_DEBUG
       IF (debugMode) CALL DEBUG_CALL('GETFFIELD_START PAR',myThid)
# endif
       CALL EXF_GETFFIELD_START( useGudYearlyFields,
     I                           'gud', 'PAR', PARperiod,
     I                           PARstartdate1, PARstartdate2,
     U                           PARStartTime, errCount,
     I                           myThid )
      ENDIF

      IF ( ironfile .NE. ' ' ) THEN
# ifdef ALLOW_DEBUG
       IF (debugMode) CALL DEBUG_CALL('GETFFIELD_START iron',myThid)
# endif
       CALL EXF_GETFFIELD_START( useGudYearlyFields,
     I                           'gud', 'iron', ironperiod,
     I                           ironstartdate1, ironstartdate2,
     U                           ironStartTime, errCount,
     I                           myThid )
      ENDIF

      IF ( icefile .NE. ' ' ) THEN
# ifdef ALLOW_DEBUG
       IF (debugMode) CALL DEBUG_CALL('GETFFIELD_START ice',myThid)
# endif
       CALL EXF_GETFFIELD_START( useGudYearlyFields,
     I                           'gud', 'ice', iceperiod,
     I                           icestartdate1, icestartdate2,
     U                           iceStartTime, errCount,
     I                           myThid )
      ENDIF

      IF ( windfile .NE. ' ' ) THEN
# ifdef ALLOW_DEBUG
       IF (debugMode) CALL DEBUG_CALL('GETFFIELD_START wind',myThid)
# endif
       CALL EXF_GETFFIELD_START( useGudYearlyFields,
     I                           'gud', 'wind', windperiod,
     I                           windstartdate1, windstartdate2,
     U                           windStartTime, errCount,
     I                           myThid )
      ENDIF

      IF ( pCO2file .NE. ' ' ) THEN
# ifdef ALLOW_DEBUG
       IF (debugMode) CALL DEBUG_CALL('GETFFIELD_START pCO2',myThid)
# endif
       CALL EXF_GETFFIELD_START( useGudYearlyFields,
     I                           'gud', 'pCO2', pCO2period,
     I                           pCO2startdate1, pCO2startdate2,
     U                           pCO2StartTime, errCount,
     I                           myThid )
      ENDIF
CCOG[[[end]]] (checksum: c6a76a9e1ec3b3fab541cde1638c17c5)

      IF ( errCount.GE.1 ) THEN
       WRITE(msgBuf,'(A,I3,A)')
     &     'GUD_EXF_INIT_FIXED: detected', errCount,' fatal error(s)'
       CALL PRINT_ERROR( msgBuf, myThid )
       CALL ALL_PROC_DIE( 0 )
       STOP 'ABNORMAL END: S/R GUD_EXF_INIT_FIXED'
      ENDIF

      _END_MASTER( myThid )
      _BARRIER

#endif /* ALLOW_EXF */
#endif /* ALLOW_GUD */

      RETURN
      END
