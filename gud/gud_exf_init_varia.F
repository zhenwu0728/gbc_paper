C This file contains cog templates.
C Code between template and end marker is autogenerated.
C Add new forcing fields to exfflds in exf.py
C
CCOG[[[cog import cog; from exf import *]]]
CCOG[[[end]]] (checksum: d41d8cd98f00b204e9800998ecf8427e)

#include "GUD_OPTIONS.h"
#include "EXF_OPTIONS.h"

C---+----1----+----2----+----3----+----4----+----5----+----6----+----7-|--+----|
CBOP
C     !ROUTINE: GUD_EXF_INIT_VARIA

C     !INTERFACE:
      SUBROUTINE GUD_EXF_INIT_VARIA( myThid )

C     !DESCRIPTION:
C     Initialize GUD constants

C     !USES:
      IMPLICIT NONE
#include "EEPARAMS.h"
#include "SIZE.h"
#include "GRID.h"
#include "PARAMS.h"
#ifdef ALLOW_EXF
#include "EXF_PARAM.h"
#endif
#ifdef ALLOW_GUD
#include "GUD_SIZE.h"
#include "GUD_EXF.h"
#endif

C     !INPUT PARAMETERS:
      INTEGER myThid
CEOP

#ifdef ALLOW_GUD
#ifdef ALLOW_EXF

#ifdef GUD_ALLOW_RADTRANS
      INTEGER l
#endif

C     these load constant forcing fields

#ifdef GUD_ALLOW_RADTRANS
      DO l = 1, nlam
       call exf_init_gen (
     &     OASIM_Edfile(l), OASIMperiod, gud_inscal_OASIM(l),
     &     OASIMmask, OASIMconst,
     &     OASIM_Ed(1-OLx,1-OLy,1,1,l),
     &     OASIM_Ed0(1-OLx,1-OLy,1,1,l),
     &     OASIM_Ed1(1-OLx,1-OLy,1,1,l),
#ifdef USE_EXF_INTERPOLATION
     &     OASIM_lon0, OASIM_lon_inc,
     &     OASIM_lat0, OASIM_lat_inc,
     &     OASIM_nlon, OASIM_nlat, xC, yC, OASIM_interpMethod,
#endif
     &     mythid )

       call exf_init_gen (
     &     OASIM_Esfile(l), OASIMperiod, gud_inscal_OASIM(l),
     &     OASIMmask, OASIMconst,
     &     OASIM_Es(1-OLx,1-OLy,1,1,l),
     &     OASIM_Es0(1-OLx,1-OLy,1,1,l),
     &     OASIM_Es1(1-OLx,1-OLy,1,1,l),
#ifdef USE_EXF_INTERPOLATION
     &     OASIM_lon0, OASIM_lon_inc,
     &     OASIM_lat0, OASIM_lat_inc,
     &     OASIM_nlon, OASIM_nlat, xC, yC, OASIM_interpMethod,
#endif
     &     mythid )
      ENDDO
#endif

CCOG[[[cog
CCOGfor fld,pre in exfflds:
CCOG    cog.out('''
CCOG      call exf_init_gen (
CCOG     &     {pre}file, {pre}period, gud_inscal_{pre}, {pre}mask,
CCOG     &     {pre}const, {fld}, {pre}0, {pre}1,
CCOG#ifdef USE_EXF_INTERPOLATION
CCOG     &     {pre}_lon0, {pre}_lon_inc,
CCOG     &     {pre}_lat0, {pre}_lat_inc,
CCOG     &     {pre}_nlon, {pre}_nlat, xC, yC, {pre}_interpMethod,
CCOG#endif
CCOG     &     mythid )
CCOG
CCOG'''.format(pre=pre, fld=fld), trimblanklines=True)
CCOG]]]
      call exf_init_gen (
     &     PARfile, PARperiod, gud_inscal_PAR, PARmask,
     &     PARconst, surfPAR, PAR0, PAR1,
#ifdef USE_EXF_INTERPOLATION
     &     PAR_lon0, PAR_lon_inc,
     &     PAR_lat0, PAR_lat_inc,
     &     PAR_nlon, PAR_nlat, xC, yC, PAR_interpMethod,
#endif
     &     mythid )

      call exf_init_gen (
     &     ironfile, ironperiod, gud_inscal_iron, ironmask,
     &     ironconst, inputFe, iron0, iron1,
#ifdef USE_EXF_INTERPOLATION
     &     iron_lon0, iron_lon_inc,
     &     iron_lat0, iron_lat_inc,
     &     iron_nlon, iron_nlat, xC, yC, iron_interpMethod,
#endif
     &     mythid )

      call exf_init_gen (
     &     icefile, iceperiod, gud_inscal_ice, icemask,
     &     iceconst, iceFrac, ice0, ice1,
#ifdef USE_EXF_INTERPOLATION
     &     ice_lon0, ice_lon_inc,
     &     ice_lat0, ice_lat_inc,
     &     ice_nlon, ice_nlat, xC, yC, ice_interpMethod,
#endif
     &     mythid )

      call exf_init_gen (
     &     windfile, windperiod, gud_inscal_wind, windmask,
     &     windconst, windSpeed, wind0, wind1,
#ifdef USE_EXF_INTERPOLATION
     &     wind_lon0, wind_lon_inc,
     &     wind_lat0, wind_lat_inc,
     &     wind_nlon, wind_nlat, xC, yC, wind_interpMethod,
#endif
     &     mythid )

      call exf_init_gen (
     &     pCO2file, pCO2period, gud_inscal_pCO2, pCO2mask,
     &     pCO2const, atmospCO2, pCO20, pCO21,
#ifdef USE_EXF_INTERPOLATION
     &     pCO2_lon0, pCO2_lon_inc,
     &     pCO2_lat0, pCO2_lat_inc,
     &     pCO2_nlon, pCO2_nlat, xC, yC, pCO2_interpMethod,
#endif
     &     mythid )

CCOG[[[end]]] (checksum: e88293c7e18634387781bd0de7cf08d1)
      IF (gud_loadFieldsEarly) THEN
C       these load time-varying forcing fields
C       (usually done in gud_fields_load, but may be needed for chl)
#ifdef GUD_ALLOW_RADTRANS
       DO l = 1, nlam
        call exf_set_gen(
     &     OASIM_Edfile(l), OASIMStartTime, OASIMperiod,
     &     gud_inscal_OASIM(l),
     &     OASIM_exfremo_intercept, OASIM_exfremo_slope,
     &     OASIM_Ed(1-OLx,1-OLy,1,1,l),
     &     OASIM_Ed0(1-OLx,1-OLy,1,1,l),
     &     OASIM_Ed1(1-OLx,1-OLy,1,1,l),
     &     OASIMmask,
#ifdef USE_EXF_INTERPOLATION
     &     OASIM_lon0, OASIM_lon_inc,
     &     OASIM_lat0, OASIM_lat_inc,
     &     OASIM_nlon, OASIM_nlat, xC, yC, OASIM_interpMethod,
#endif
     &     starttime, nIter0, mythid )

        call exf_set_gen(
     &     OASIM_Esfile(l), OASIMStartTime, OASIMperiod,
     &     gud_inscal_OASIM(l),
     &     OASIM_exfremo_intercept, OASIM_exfremo_slope,
     &     OASIM_Es(1-OLx,1-OLy,1,1,l),
     &     OASIM_Es0(1-OLx,1-OLy,1,1,l),
     &     OASIM_Es1(1-OLx,1-OLy,1,1,l),
     &     OASIMmask,
#ifdef USE_EXF_INTERPOLATION
     &     OASIM_lon0, OASIM_lon_inc,
     &     OASIM_lat0, OASIM_lat_inc,
     &     OASIM_nlon, OASIM_nlat, xC, yC, OASIM_interpMethod,
#endif
     &     starttime, nIter0, mythid )
       ENDDO
#endif

CCOG[[[cog
CCOGcog.out('\n'.join('''
CCOG        call exf_set_gen(
CCOG     &     {pre}file, {pre}StartTime, {pre}period,
CCOG     &     gud_inscal_{pre},
CCOG     &     {pre}_exfremo_intercept, {pre}_exfremo_slope,
CCOG     &     {fld}, {pre}0, {pre}1, {pre}mask,
CCOG#ifdef USE_EXF_INTERPOLATION
CCOG     &     {pre}_lon0, {pre}_lon_inc,
CCOG     &     {pre}_lat0, {pre}_lat_inc,
CCOG     &     {pre}_nlon, {pre}_nlat, xC, yC, {pre}_interpMethod,
CCOG#endif
CCOG     &     starttime, nIter0, mythid )'''.format(pre=pre, fld=fld)
CCOG    for fld,pre in exfflds), trimblanklines=True)
CCOG]]]
        call exf_set_gen(
     &     PARfile, PARStartTime, PARperiod,
     &     gud_inscal_PAR,
     &     PAR_exfremo_intercept, PAR_exfremo_slope,
     &     surfPAR, PAR0, PAR1, PARmask,
#ifdef USE_EXF_INTERPOLATION
     &     PAR_lon0, PAR_lon_inc,
     &     PAR_lat0, PAR_lat_inc,
     &     PAR_nlon, PAR_nlat, xC, yC, PAR_interpMethod,
#endif
     &     starttime, nIter0, mythid )

        call exf_set_gen(
     &     ironfile, ironStartTime, ironperiod,
     &     gud_inscal_iron,
     &     iron_exfremo_intercept, iron_exfremo_slope,
     &     inputFe, iron0, iron1, ironmask,
#ifdef USE_EXF_INTERPOLATION
     &     iron_lon0, iron_lon_inc,
     &     iron_lat0, iron_lat_inc,
     &     iron_nlon, iron_nlat, xC, yC, iron_interpMethod,
#endif
     &     starttime, nIter0, mythid )

        call exf_set_gen(
     &     icefile, iceStartTime, iceperiod,
     &     gud_inscal_ice,
     &     ice_exfremo_intercept, ice_exfremo_slope,
     &     iceFrac, ice0, ice1, icemask,
#ifdef USE_EXF_INTERPOLATION
     &     ice_lon0, ice_lon_inc,
     &     ice_lat0, ice_lat_inc,
     &     ice_nlon, ice_nlat, xC, yC, ice_interpMethod,
#endif
     &     starttime, nIter0, mythid )

        call exf_set_gen(
     &     windfile, windStartTime, windperiod,
     &     gud_inscal_wind,
     &     wind_exfremo_intercept, wind_exfremo_slope,
     &     windSpeed, wind0, wind1, windmask,
#ifdef USE_EXF_INTERPOLATION
     &     wind_lon0, wind_lon_inc,
     &     wind_lat0, wind_lat_inc,
     &     wind_nlon, wind_nlat, xC, yC, wind_interpMethod,
#endif
     &     starttime, nIter0, mythid )

        call exf_set_gen(
     &     pCO2file, pCO2StartTime, pCO2period,
     &     gud_inscal_pCO2,
     &     pCO2_exfremo_intercept, pCO2_exfremo_slope,
     &     atmospCO2, pCO20, pCO21, pCO2mask,
#ifdef USE_EXF_INTERPOLATION
     &     pCO2_lon0, pCO2_lon_inc,
     &     pCO2_lat0, pCO2_lat_inc,
     &     pCO2_nlon, pCO2_nlat, xC, yC, pCO2_interpMethod,
#endif
     &     starttime, nIter0, mythid )
CCOG[[[end]]] (checksum: 4cf1459393c2838e16518dc733ca5e90)
      ENDIF

#endif /* ALLOW_EXF */
#endif /* ALLOW_GUD */

      RETURN
      END
